import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class WebServer {
	
	private int port;
	private int maxConnections;

	protected void setPort(int port) { 
		this.port = port; 
	}
	
	public int getPort() { 
		return port; 
	}
	
	protected void setMaxConnections(int max) {
		maxConnections = max;
	}
	
	public int getMaxConnections() { 
		return maxConnections; 
	}
	
	public WebServer(int port, int maxConnections) {
		setPort(port);
		setMaxConnections(maxConnections);
	}
	
	// this method can be overridden to handle the client request.
	protected void handleConnection(Socket server) throws IOException {
		
		System.out.println("Processing the request...");
		
		// 
		BufferedReader in = new BufferedReader( new InputStreamReader(server.getInputStream()) );
		
		//
		PrintWriter out = new PrintWriter( server.getOutputStream(),true );	
	
		System.out.println("Generic network server: got connection from " + 
				server.getInetAddress().getHostName() + "\n" +
				"with first line '" + in.readLine() + "'");
	 
		out.println("Generic network server");
		server.close();
		
	}

	public void listen() {
		int i = 0;
		try(ServerSocket listener = new ServerSocket(port)) {
			Socket server; 
			while((i++ < maxConnections) || (maxConnections == 0)) {
				System.out.println("Waiting for connection...");
				server = listener.accept(); // wait for connection				
				System.out.println("connection is established.");
				handleConnection(server);
			}
		} catch (IOException ioe) {
			System.out.println("IOException : " + ioe);
			ioe.printStackTrace();
		}
	} 

	public static void main(String args[]) {
		WebServer test = new WebServer(6502, 5);
		test.listen();
	}
 
}